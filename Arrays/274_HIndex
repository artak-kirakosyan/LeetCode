class Solution:
    def hIndex(self, citations: List[int]) -> int:
        citations.sort()
        start = 0
        length = len(citations)
        end = length - 1
        curr_h = 0
        while end >= start:
            middle = (start + end)//2
            remaining = length - middle
            cit = citations[middle]
            curr_h = max(min(cit, remaining), curr_h)

            if cit > remaining:
                end = middle - 1
            elif cit < remaining:
                start = middle + 1
            else:
                break
        return curr_h


class Solution:
    def hIndex(self, citations: List[int]) -> int:
        
        citations.sort()
        current_h = 0
        l = len(citations)
        for ind, cit in enumerate(citations):
            remaining = l - ind
            current_h = max(min(cit, remaining), current_h)
        return current_h

