class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        if not needle:
            return 0
        try:
            return haystack.index(needle)
        except ValueError:
            return -1

#-----------------------------------------------------------------#
# An alternative solution without usage of built-in capabilities  #
#-----------------------------------------------------------------#

class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        if not needle:
            return 0

        haystack_ind, needle_ind = 0, 0
        found = False
        start = 0

        while haystack_ind < len(haystack):
            if haystack[haystack_ind] == needle[needle_ind]:
                if not found:
                    found = True
                    start = haystack_ind
                    needle_ind = 0
                needle_ind += 1
            else:
                if found:
                    found = False
                    haystack_ind = start
                    needle_ind = 0

            if needle_ind == len(needle):
                return start
            haystack_ind += 1
        return -1
